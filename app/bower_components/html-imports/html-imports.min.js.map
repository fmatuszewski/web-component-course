{"version":3,"sources":["/src/html-imports.js"],"names":["scope","constructor","Importer","documents","imports","document","querySelectorAll","IMPORT_SELECTOR","i","l","length","whenElementLoaded","observe","MutationObserver","_onMutation","bind","head","childList","useNative","_loader","Loader","_onLoaded","_onLoadedAll","__doc","implementation","createHTMLDocument","whenDocumentReady","_loadSubtree","onLoad","onComplete","cache","onload","oncomplete","inflight","pending","isImportLink","node","nodeType","Node","ELEMENT_NODE","MATCHES","call","element","then","Promise","resolve","isElementLoaded","addEventListener","isIE","localName","fakeLoad","textContent","indexOf","sheet","csr","cssRules","type","CSSRule","IMPORT_RULE","styleSheet","setTimeout","dispatchEvent","CustomEvent","cancelable","bubbles","detail","undefined","isLoaded","import","readyState","whenReady","callback","whenImportsReady","stateChanged","removeEventListener","promises","imp","push","all","createElement","currentScript","Object","defineProperty","get","scripts","configurable","ABS_URL_TEST","CSS_URL_REGEXP","CSS_IMPORT_REGEXP","Path","fixUrls","base","href","setAttribute","replaceAttrUrl","getAttribute","src","resolveUrlsInStyle","fixUrlAttributes","attrs","a","at","attributes","v","value","search","resolveUrlsInCssText","fixUrlsInTemplates","t$","fixUrlsInTemplate","template","content","n$","n","style","linkUrl","cssText","r","replaceUrls","text","regexp","replace","m","pre","url","post","urlPath","_resolveUrl","test","__workingURL","u","URL","pathname","e","doc","__tempDoc","__base","appendChild","__anchor","Xhr","async","load","request","XMLHttpRequest","open","redirectedUrl","locationHeader","getResponseHeader","substr","location","origin","console","error","message","status","response","responseText","send","addNode","require","checkDone","elt","dedupe","fetch","tail","match","pieces","split","body","header","atob","decodeURIComponent","receive","resource","err","$p","p","navigator","userAgent","Element","prototype","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","nodes","count","_makeDocument","display","innerHTML","baseEl","querySelector","parentNode","removeChild","s$","s","scriptType","extraStyles","_flatten","_waitForStyles","_runScripts","_fireEvents","_moveStylesToHead","_observe","promise","clone","loadedPromise","j","ll","attr","name","replaceChild","stylesInImportsSelector","importLink","stylesSelector","insertBefore","eventType","subtree","mutations","addedNodes","window","HTMLImports"],"mappings":"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","file":"html-imports.min.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n(function(scope) {\n\n  /********************* base setup *********************/\n  const IMPORT_SELECTOR = 'link[rel=import]';\n  const useNative = Boolean('import' in document.createElement('link'));\n\n  // Polyfill `currentScript` for browsers without it.\n  let currentScript = null;\n  if ('currentScript' in document === false) {\n    Object.defineProperty(document, 'currentScript', {\n      get: function() {\n        return currentScript ||\n          // NOTE: only works when called in synchronously executing code.\n          // readyState should check if `loading` but IE10 is\n          // interactive when scripts run so we cheat. This is not needed by\n          // html-imports polyfill but helps generally polyfill `currentScript`.\n          (document.readyState !== 'complete' ?\n            document.scripts[document.scripts.length - 1] : null);\n      },\n      configurable: true\n    });\n  }\n\n  /********************* path fixup *********************/\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\n\n\n  // path fixup: style elements in imports must be made relative to the main\n  // document. We fixup url's in url() and @import.\n  const Path = {\n\n    fixUrls: function(element, base) {\n      if (element.href) {\n        element.setAttribute('href',\n          Path.replaceAttrUrl(element.getAttribute('href'), base));\n      }\n      if (element.src) {\n        element.setAttribute('src',\n          Path.replaceAttrUrl(element.getAttribute('src'), base));\n      }\n      if (element.localName === 'style') {\n        Path.resolveUrlsInStyle(element, base);\n      } else if (element.localName === 'script' && element.textContent) {\n        element.textContent += `\\n//# sourceURL=${base}`;\n      }\n    },\n\n    fixUrlAttributes: function(element, base) {\n      const attrs = ['action', 'src', 'href', 'url', 'style'];\n      for (let i = 0, a; i < attrs.length && (a = attrs[i]); i++) {\n        const at = element.attributes[a];\n        const v = at && at.value;\n        if (v && (v.search(/({{|\\[\\[)/) < 0)) {\n          at.value = (a === 'style') ?\n            Path.resolveUrlsInCssText(v, base) :\n            Path.replaceAttrUrl(v, base);\n        }\n      }\n    },\n\n    fixUrlsInTemplates: function(element, base) {\n      const t$ = element.querySelectorAll('template');\n      for (let i = 0; i < t$.length; i++) {\n        Path.fixUrlsInTemplate(t$[i], base);\n      }\n    },\n\n    fixUrlsInTemplate: function(template, base) {\n      const content = template.content;\n      if (!content) { // Template not supported.\n        return;\n      }\n      const n$ = content.querySelectorAll(\n        'style, form[action], [src], [href], [url], [style]');\n      for (let i = 0; i < n$.length; i++) {\n        const n = n$[i];\n        if (n.localName == 'style') {\n          Path.resolveUrlsInStyle(n, base);\n        } else {\n          Path.fixUrlAttributes(n, base);\n        }\n      }\n      Path.fixUrlsInTemplates(content, base);\n    },\n\n    resolveUrlsInStyle: function(style, linkUrl) {\n      style.textContent = Path.resolveUrlsInCssText(style.textContent, linkUrl);\n    },\n\n    resolveUrlsInCssText: function(cssText, linkUrl) {\n      let r = Path.replaceUrls(cssText, linkUrl, CSS_URL_REGEXP);\n      r = Path.replaceUrls(r, linkUrl, CSS_IMPORT_REGEXP);\n      return r;\n    },\n\n    replaceUrls: function(text, linkUrl, regexp) {\n      return text.replace(regexp, function(m, pre, url, post) {\n        let urlPath = url.replace(/[\"']/g, '');\n        if (linkUrl) {\n          urlPath = Path._resolveUrl(urlPath, linkUrl);\n        }\n        return pre + '\\'' + urlPath + '\\'' + post;\n      });\n    },\n\n    replaceAttrUrl: function(text, linkUrl) {\n      if (text && ABS_URL_TEST.test(text)) {\n        return text;\n      } else {\n        return Path._resolveUrl(text, linkUrl);\n      }\n    },\n\n    _resolveUrl: function(url, base) {\n      // Lazy feature detection.\n      if (Path.__workingURL === undefined) {\n        Path.__workingURL = false;\n        try {\n          const u = new URL('b', 'http://a');\n          u.pathname = 'c%20d';\n          Path.__workingURL = (u.href === 'http://a/c%20d');\n        } catch (e) {}\n      }\n\n      if (Path.__workingURL) {\n        return (new URL(url, base)).href;\n      }\n\n      // Fallback to creating an anchor into a disconnected document.\n      let doc = Path.__tempDoc;\n      if (!doc) {\n        doc = document.implementation.createHTMLDocument('temp');\n        Path.__tempDoc = doc;\n        doc.__base = doc.createElement('base');\n        doc.head.appendChild(doc.__base);\n        doc.__anchor = doc.createElement('a');\n      }\n      doc.__base.href = base;\n      doc.__anchor.href = url;\n      return doc.__anchor.href || url;\n    }\n  };\n\n  /********************* Xhr processor *********************/\n  const Xhr = {\n\n    async: true,\n\n    /**\n     * @param {!string} url\n     * @param {!function(boolean, ?, string=)} callback\n     * @return {XMLHttpRequest}\n     */\n    load: function(url, callback) {\n      const request = new XMLHttpRequest();\n      request.open('GET', url, Xhr.async);\n      request.addEventListener('readystatechange', (e) => {\n        if (request.readyState === 4) {\n          // Servers redirecting an import can add a Location header to help us\n          // polyfill correctly.\n          let redirectedUrl = undefined;\n          try {\n            const locationHeader = request.getResponseHeader('Location');\n            if (locationHeader) {\n              // Relative or full path.\n              redirectedUrl = (locationHeader.substr(0, 1) === '/') ?\n                location.origin + locationHeader : locationHeader;\n            }\n          } catch (e) {\n            console.error(e.message);\n          }\n          const isOk = ((request.status >= 200 && request.status < 300) ||\n            request.status === 304 || request.status === 0);\n          const resource = (request.response || request.responseText);\n          callback(!isOk, resource, redirectedUrl);\n        }\n      });\n      request.send();\n      return request;\n    }\n  };\n\n  /********************* loader *********************/\n  // This loader supports a dynamic list of urls\n  // and an oncomplete callback that is called when the loader is done.\n  // NOTE: The polyfill currently does *not* need this dynamism or the\n  // onComplete concept. Because of this, the loader could be simplified\n  // quite a bit.\n  class Loader {\n    constructor(onLoad, onComplete) {\n      this.cache = {};\n      this.onload = onLoad;\n      this.oncomplete = onComplete;\n      this.inflight = 0;\n      this.pending = {};\n    }\n\n    /**\n     * @param {!Element} node\n     */\n    addNode(node) {\n      // number of transactions to complete\n      this.inflight++;\n      // commence transactions\n      this.require(node);\n      // anything to do?\n      this.checkDone();\n    }\n\n    /**\n     * @param {!Element} elt\n     */\n    require(elt) {\n      const url = elt.href || elt.src;\n      // deduplication\n      if (!this.dedupe(url, elt)) {\n        // fetch this resource\n        this.fetch(url, elt);\n      }\n    }\n\n    /**\n     * @param {string} url\n     * @param {!Element} elt\n     * @return {boolean}\n     */\n    dedupe(url, elt) {\n      if (this.pending[url]) {\n        // add to list of nodes waiting for inUrl\n        this.pending[url].push(elt);\n        // don't need fetch\n        return true;\n      }\n      let resource;\n      if (this.cache[url]) {\n        this.onload(url, elt, this.cache[url]);\n        // finished this transaction\n        this.tail();\n        // don't need fetch\n        return true;\n      }\n      // first node waiting for inUrl\n      this.pending[url] = [elt];\n      // need fetch (not a dupe)\n      return false;\n    }\n\n    /**\n     * @param {string} url\n     * @param {!Element} elt\n     */\n    fetch(url, elt) {\n      if (!url) {\n        this.receive(url, elt, true, 'error: href must be specified');\n      } else if (url.match(/^data:/)) {\n        // Handle Data URI Scheme\n        const pieces = url.split(',');\n        const header = pieces[0];\n        let body = pieces[1];\n        if (header.indexOf(';base64') > -1) {\n          body = atob(body);\n        } else {\n          body = decodeURIComponent(body);\n        }\n        this.receive(url, elt, false, body);\n      } else {\n        Xhr.load(url, (error, resource, redirectedUrl) =>\n          this.receive(url, elt, error, resource, redirectedUrl));\n      }\n    }\n\n    /**\n     * @param {!string} url\n     * @param {!Element} elt\n     * @param {boolean} err\n     * @param {string=} resource\n     * @param {string=} redirectedUrl\n     */\n    receive(url, elt, err, resource, redirectedUrl) {\n      this.cache[url] = resource;\n      const $p = this.pending[url];\n      for (let i = 0, l = $p.length, p;\n        (i < l) && (p = $p[i]); i++) {\n        // If url was redirected, use the redirected location so paths are\n        // calculated relative to that.\n        this.onload(url, p, resource, err, redirectedUrl);\n        this.tail();\n      }\n      this.pending[url] = null;\n    }\n\n    tail() {\n      --this.inflight;\n      this.checkDone();\n    }\n\n    checkDone() {\n      if (!this.inflight) {\n        this.oncomplete();\n      }\n    }\n  }\n\n  /********************* importer *********************/\n\n  const isIE = /Trident/.test(navigator.userAgent) ||\n    /Edge\\/\\d./i.test(navigator.userAgent);\n\n  // Used to mark the scripts that need to be cloned in order to be executed.\n  const scriptType = 'import-script';\n\n  const scriptsSelector = `\n    script:not([type]),\n    script[type=\"application/javascript\"],\n    script[type=\"text/javascript\"]`;\n\n  const stylesSelector = `\n    style:not([type]),\n    link[rel=stylesheet][href]:not([type])`;\n\n  const stylesInImportsSelector = `\n    ${IMPORT_SELECTOR} style:not([type]),\n    ${IMPORT_SELECTOR} link[rel=stylesheet][href]:not([type])`;\n\n  /**\n   * @type {Function}\n   */\n  const MATCHES = Element.prototype.matches ||\n    Element.prototype.matchesSelector ||\n    Element.prototype.mozMatchesSelector ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.oMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n\n  /**\n   * Importer will:\n   * - load any linked import documents (with deduping)\n   * - whenever an import is loaded, prompt the parser to try to parse\n   * - observe imported documents for new elements (these are handled via the\n   *   dynamic importer)\n   */\n  class Importer {\n    constructor() {\n      this.documents = {};\n      // Make sure to catch any imports that are in the process of loading\n      // when this script is run.\n      const imports = document.querySelectorAll(IMPORT_SELECTOR);\n      for (let i = 0, l = imports.length; i < l; i++) {\n        whenElementLoaded(imports[i]);\n      }\n      // Observe only document head\n      new MutationObserver(this._onMutation.bind(this)).observe(document.head, {\n        childList: true\n      });\n\n      if (!useNative) {\n        this._loader = new Loader(\n          this._onLoaded.bind(this), this._onLoadedAll.bind(this)\n        );\n        this.__doc = document.implementation.createHTMLDocument('importer');\n        whenDocumentReady(() => this._loadSubtree(document));\n      }\n    }\n\n    /**\n     * @param {!(HTMLElement|Document)} node\n     */\n    _loadSubtree(node) {\n      const nodes = node.querySelectorAll(IMPORT_SELECTOR);\n      const count = nodes.length;\n      if (count) {\n        this._loader.inflight += count;\n        for (let i = 0; i < count; i++) {\n          // Ensure the load promise is setup.\n          whenElementLoaded(nodes[i]);\n          this._loader.require(nodes[i]);\n        }\n        this._loader.checkDone();\n      }\n    }\n\n    _onLoaded(url, elt, resource, err, redirectedUrl) {\n      // We've already seen a document at this url, return.\n      if (this.documents[url] !== undefined) {\n        return;\n      }\n      if (err) {\n        this.documents[url] = null;\n      } else {\n        // Generate a document from data.\n        const doc = this._makeDocument(resource, redirectedUrl || url);\n        // note, we cannot use MO to detect parsed nodes because\n        // SD polyfill does not report these as mutations.\n        this._loadSubtree(doc);\n        this.documents[url] = doc;\n      }\n    }\n\n    /**\n     * Creates a new document containing resource and normalizes urls accordingly.\n     * @param {string=} resource\n     * @param {string=} url\n     * @return {!HTMLElement}\n     */\n    _makeDocument(resource, url) {\n      // Create element from a disconnected document so that resources won't\n      // load until we say so.\n      const content = /** @type {HTMLElement} */\n        (this.__doc.createElement('import-content'));\n\n      content.style.display = 'none';\n      if (url) {\n        content.setAttribute('import-href', url);\n      }\n      if (resource) {\n        content.innerHTML = resource;\n      }\n\n      // Support <base> in imported docs. Resolve url and remove it from the parent.\n      const baseEl = /** @type {HTMLBaseElement} */ (content.querySelector('base'));\n      if (baseEl) {\n        url = Path.replaceAttrUrl(baseEl.getAttribute('href'), url);\n        baseEl.parentNode.removeChild(baseEl);\n      }\n\n      // This is specific to users of <dom-module> (Polymer).\n      // TODO(valdrin) remove this when importForElement is exposed.\n      const s$ = content.querySelectorAll('dom-module');\n      for (let i = 0, s; i < s$.length && (s = s$[i]); i++) {\n        s.setAttribute('assetpath',\n          Path.replaceAttrUrl(s.getAttribute('assetpath') || '', url));\n      }\n\n      const n$ = content.querySelectorAll(`${IMPORT_SELECTOR},${stylesSelector},${scriptsSelector}`);\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        // Ensure we add load/error listeners.\n        whenElementLoaded(n);\n        Path.fixUrls(n, url);\n        if (n.localName === 'script') {\n          n['__originalType'] = n.getAttribute('type');\n          n.setAttribute('type', scriptType);\n        }\n      }\n      Path.fixUrlsInTemplates(content, url);\n      return content;\n    }\n\n    _onLoadedAll() {\n      const extraStyles = this._flatten();\n      // Scripts and styles are executed in sequentially so that styles are\n      // applied before scripts run.\n      this._waitForStyles(extraStyles)\n        .then(() => this._runScripts())\n        .then(() => this._fireEvents());\n    }\n\n    /**\n     * @param {(HTMLElement|Document)=} element\n     */\n    _flatten(element) {\n      const extraStyles = element ? null : [];\n      element = element || document;\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (element.querySelectorAll(IMPORT_SELECTOR));\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        n.import = this.documents[n.href];\n        if (n.import && !n.import['__firstImport']) {\n          n.import['__firstImport'] = n;\n          this._flatten(n.import);\n          // If in the main document, observe for any imports added later.\n          if (element === document) {\n            // <link rel=stylesheet> should be appended to <head>. Not doing so\n            // in IE/Edge breaks the cascading order\n            // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10472273/\n            if (isIE) {\n              this._moveStylesToHead(n, extraStyles);\n            }\n            this._observe(n.import);\n          }\n          n.appendChild(n.import);\n        }\n      }\n      return extraStyles;\n    }\n\n    /**\n     * Replaces all the imported scripts with a clone in order to execute them.\n     * Updates the `currentScript`.\n     * @return {Promise} Resolved when scripts are loaded.\n     */\n    _runScripts() {\n      const s$ = document.querySelectorAll(`script[type=${scriptType}]`);\n      let promise = Promise.resolve();\n      for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n        promise = promise.then(() => {\n          const clone = document.createElement('script');\n\n          // Setting `src` will trigger load/error events, so listen for those\n          // before setting the attributes. For inline scripts, consider them\n          // already loaded.\n          let loadedPromise;\n          if (s.src) {\n            loadedPromise = whenElementLoaded(clone);\n          } else {\n            clone['__loaded'] = true;\n            loadedPromise = Promise.resolve(clone);\n          }\n\n          // Copy attributes and textContent.\n          for (let j = 0, ll = s.attributes.length; j < ll; j++) {\n            const attr = s.attributes[j];\n            if (attr.name === 'type') {\n              clone.setAttribute(attr.name, s['__originalType'] || 'text/javascript');\n            } else {\n              clone.setAttribute(attr.name, attr.value);\n            }\n          }\n          clone.textContent = s.textContent;\n\n          // Update currentScript and replace original with clone script.\n          currentScript = clone;\n          s.parentNode.replaceChild(clone, s);\n          // Listen for load/error events before adding the clone to the document.\n          // After is loaded, reset currentScript.\n          return loadedPromise.then(() => currentScript = null);\n        });\n      }\n      return promise;\n    }\n\n    /**\n     * Waits for all the imported stylesheets/styles to be loaded.\n     * @return {Promise}\n     */\n    _waitForStyles(extraStyles) {\n      const s$ = document.querySelectorAll(stylesInImportsSelector);\n      const promises = [];\n      for (let i = 0; i < s$.length; i++) {\n        promises.push(whenElementLoaded(s$[i]));\n      }\n      for (let i = 0; i < extraStyles.length; i++) {\n        promises.push(whenElementLoaded(extraStyles[i]));\n      }\n      return Promise.all(promises);\n    }\n\n    /**\n     * Moves <link rel=stylesheet> and <style> elements contained in imports to\n     * <head>.\n     * @param {!HTMLLinkElement} importLink\n     */\n    _moveStylesToHead(importLink, extraStyles) {\n      const n$ = importLink.import.querySelectorAll(stylesSelector);\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        if (importLink.parentNode === document.head) {\n          document.head.insertBefore(n, importLink);\n        } else {\n          document.head.appendChild(n);\n        }\n        if (n.localName === 'style') {\n          n.textContent += ''\n        }\n        extraStyles.push(n);\n      }\n    }\n\n    /**\n     * Fires load/error events for loaded imports.\n     */\n    _fireEvents() {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (document.querySelectorAll(IMPORT_SELECTOR));\n      // Inverse order to have events firing bottom-up.\n      for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\n        // Don't fire twice same event.\n        if (!n['__fired']) {\n          n['__fired'] = true;\n          const eventType = n.import ? 'load' : 'error';\n          n.dispatchEvent(new CustomEvent(eventType, {\n            bubbles: false,\n            cancelable: false,\n            detail: undefined\n          }));\n        }\n      }\n    }\n\n    _observe(element) {\n      if (element['__importObserver']) {\n        return;\n      }\n      element['__importObserver'] = new MutationObserver(this._onMutation.bind(this));\n      element['__importObserver'].observe(element, {\n        childList: true,\n        subtree: true\n      });\n    }\n\n    /**\n     * @param {Array<MutationRecord>} mutations\n     */\n    _onMutation(mutations) {\n      for (let j = 0, m; j < mutations.length && (m = mutations[j]); j++) {\n        for (let i = 0, l = m.addedNodes ? m.addedNodes.length : 0; i < l; i++) {\n          const n = /** @type {Element} */ (m.addedNodes[i]);\n          if (n && isImportLink(n)) {\n            whenElementLoaded(n);\n            if (!useNative) {\n              this._loader.addNode(n);\n            }\n          }\n        }\n      }\n    }\n\n  }\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  function isImportLink(node) {\n    return node.nodeType === Node.ELEMENT_NODE && MATCHES.call(node, IMPORT_SELECTOR);\n  }\n\n  /**\n   * Waits for an element to finish loading. If already done loading, it will\n   * mark the element accordingly.\n   * @param {!Element} element\n   * @return {Promise}\n   */\n  function whenElementLoaded(element) {\n    if (!element['__loadPromise']) {\n      element['__loadPromise'] = new Promise((resolve) => {\n        if (isElementLoaded(element)) {\n          resolve();\n        } else {\n          element.addEventListener('load', resolve);\n          element.addEventListener('error', resolve);\n          if (isIE && element.localName === 'style') {\n            // NOTE: IE does not fire \"load\" event for styles that have already\n            // loaded. This is in violation of the spec, so we try our hardest\n            // to work around it.\n            let fakeLoad = false;\n            // If there's not @import in the textContent, assume it has loaded\n            if (element.textContent.indexOf('@import') === -1) {\n              fakeLoad = true;\n            }\n            // if we have a sheet, we have been parsed.\n            else if (element.sheet) {\n              fakeLoad = true;\n              const csr = element.sheet.cssRules;\n              // search the rules for @import's\n              for (let i = 0, l = csr ? csr.length : 0; i < l && fakeLoad; i++) {\n                if (csr[i].type === CSSRule.IMPORT_RULE) {\n                  // if every @import has resolved, fake the load\n                  fakeLoad = Boolean(csr[i].styleSheet);\n                }\n              }\n            }\n            // Dispatch a fake load event and continue parsing\n            if (fakeLoad) {\n              // Fire async, to prevent reentrancy\n              setTimeout(() => element.dispatchEvent(new CustomEvent('load', {\n                cancelable: false,\n                bubbles: false,\n                detail: undefined\n              })));\n            }\n          }\n        }\n      }).then(() => {\n        element['__loaded'] = true;\n        return element;\n      });\n    }\n    return element['__loadPromise'];\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {boolean}\n   */\n  function isElementLoaded(element) {\n    if (element['__loaded']) {\n      return true;\n    }\n    let isLoaded = false;\n    if (useNative && isImportLink(element) &&\n      element.import && element.import.readyState !== 'loading') {\n      isLoaded = true;\n    }\n    element['__loaded'] = isLoaded;\n    return isLoaded;\n  }\n\n  /**\n   * Calls the callback when all imports in the document at call time\n   * (or at least document ready) have loaded. Callback is called synchronously\n   * if imports are already done loading.\n   * @param {function()=} callback\n   */\n  function whenReady(callback) {\n    // 1. ensure the document is in a ready state (has dom), then\n    // 2. watch for loading of imports and call callback when done\n    whenDocumentReady(() => whenImportsReady(() => callback && callback()));\n  }\n\n  /**\n   * Invokes the callback when document is in ready state. Callback is called\n   *  synchronously if document is already done loading.\n   * @param {!function()} callback\n   */\n  function whenDocumentReady(callback) {\n    if (document.readyState !== 'loading') {\n      callback();\n    } else {\n      document.addEventListener('readystatechange', function stateChanged() {\n        if (document.readyState !== 'loading') {\n          document.removeEventListener('readystatechange', stateChanged);\n          callback();\n        }\n      });\n    }\n  }\n\n  /**\n   * Invokes the callback after all imports are loaded. Callback is called\n   * synchronously if imports are already done loading.\n   * @param {!function()} callback\n   */\n  function whenImportsReady(callback) {\n    let imports = document.querySelectorAll(IMPORT_SELECTOR);\n    const promises = [];\n    for (let i = 0, l = imports.length, imp; i < l && (imp = imports[i]); i++) {\n      // Skip nested imports.\n      if (MATCHES.call(imp, `${IMPORT_SELECTOR} ${IMPORT_SELECTOR}`)) {\n        continue;\n      }\n      if (!isElementLoaded(imp)) {\n        promises.push(whenElementLoaded(imp));\n      }\n    }\n    if (promises.length) {\n      Promise.all(promises).then(() => callback());\n    } else {\n      callback();\n    }\n  }\n\n  /**\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\n    method. This api is necessary because unlike the native implementation,\n    script elements do not force imports to resolve. Instead, users should wrap\n    code in either an `HTMLImportsLoaded` handler or after load time in an\n    `HTMLImports.whenReady(callback)` call.\n\n    NOTE: This module also supports these apis under the native implementation.\n    Therefore, if this file is loaded, the same code can be used under both\n    the polyfill and native implementation.\n   */\n  whenReady(() => document.dispatchEvent(new CustomEvent('HTMLImportsLoaded', {\n    cancelable: true,\n    bubbles: true,\n    detail: undefined\n  })));\n\n  new Importer();\n\n  // exports\n  scope.useNative = useNative;\n  scope.whenReady = whenReady;\n\n})(window.HTMLImports = (window.HTMLImports || {}));\n"]}