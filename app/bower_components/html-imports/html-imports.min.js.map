{"version":3,"sources":["/src/html-imports.js"],"names":["scope","constructor","Importer","doc","documents","_doc","imports","querySelectorAll","IMPORT_SELECTOR","i","l","length","whenElementLoaded","observe","MutationObserver","_onMutation","bind","head","childList","useNative","_loader","Loader","_onLoaded","_onLoadedAll","whenDocumentReady","then","_loadSubtree","onLoad","onComplete","cache","onload","oncomplete","inflight","pending","isImportLink","node","nodeType","Node","ELEMENT_NODE","MATCHES","call","fixUrlAttributes","element","base","attrs","forEach","a","at","attributes","v","value","search","Path","resolveUrlsInCssText","replaceAttrUrl","fixUrlsInTemplates","t$","content","template","n$","n","localName","resolveUrlsInStyle","runScripts","s$","promise","Promise","resolve","s","c","createElement","textContent","src","setAttribute","getAttribute","whenLoadedPromise","catch","currentScript","parentNode","replaceChild","script","waitForStyles","stylesInImportsSelector","promises","push","all","__loadPromise","reject","isElementLoaded","addEventListener","isLoaded","import","readyState","isIE","indexOf","sheet","csr","cssRules","type","CSSRule","IMPORT_RULE","styleSheet","whenReady","callback","document","watchImportsLoad","importInfo","allImports","loadedImports","errorImports","imp","Object","defineProperty","get","scripts","configurable","ABS_URL_TEST","CSS_URL_REGEXP","CSS_IMPORT_REGEXP","style","linkUrl","cssText","r","replaceUrls","text","regexp","replace","m","pre","url","post","urlPath","_resolveUrl","test","undefined","__workingURL","u","URL","pathname","href","e","__tempDoc","implementation","createHTMLDocument","__base","appendChild","__anchor","Xhr","async","load","request","XMLHttpRequest","open","redirectedUrl","locationHeader","getResponseHeader","substr","location","origin","console","error","message","status","response","responseText","send","addNodes","nodes","require","checkDone","addNode","elt","dedupe","fetch","tail","match","pieces","split","body","header","atob","decodeURIComponent","receive","resource","err","$p","p","display","innerHTML","baseEl","querySelector","removeChild","o","assetpath","importsSelectors","scriptType","_flatten","__fired","eventType","dispatchEvent","CustomEvent","bubbles","cancelable","detail","__firstImport","isEdge","importLink","stylesSelector","clone","j","ll","name","insertBefore","_observe","__importObserver","subtree","mutations","addedNodes","Element","prototype","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","navigator","userAgent","window","HTMLImports"],"mappings":"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","file":"html-imports.min.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n(function(scope) {\n\n  /********************* base setup *********************/\n  const IMPORT_SELECTOR = 'link[rel=import]';\n  const useNative = Boolean('import' in document.createElement('link'));\n  const flags = {\n    bust: false,\n    log: false\n  };\n\n  // Polyfill `currentScript` for browsers without it.\n  let currentScript = null;\n  if ('currentScript' in document === false) {\n    Object.defineProperty(document, 'currentScript', {\n      get: function() {\n        return currentScript ||\n          // NOTE: only works when called in synchronously executing code.\n          // readyState should check if `loading` but IE10 is\n          // interactive when scripts run so we cheat.\n          (document.readyState !== 'complete' ?\n            document.scripts[document.scripts.length - 1] : null);\n      },\n      configurable: true\n    });\n  }\n\n  /********************* path fixup *********************/\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\n\n\n  // path fixup: style elements in imports must be made relative to the main\n  // document. We fixup url's in url() and @import.\n  const Path = {\n    resolveUrlsInStyle: function(style, linkUrl) {\n      style.textContent = Path.resolveUrlsInCssText(style.textContent, linkUrl);\n    },\n\n    resolveUrlsInCssText: function(cssText, linkUrl) {\n      let r = Path.replaceUrls(cssText, linkUrl, CSS_URL_REGEXP);\n      r = Path.replaceUrls(r, linkUrl, CSS_IMPORT_REGEXP);\n      return r;\n    },\n\n    replaceUrls: function(text, linkUrl, regexp) {\n      return text.replace(regexp, function(m, pre, url, post) {\n        let urlPath = url.replace(/[\"']/g, '');\n        if (linkUrl) {\n          urlPath = Path._resolveUrl(urlPath, linkUrl);\n        }\n        return pre + '\\'' + urlPath + '\\'' + post;\n      });\n    },\n\n    replaceAttrUrl: function(text, linkUrl) {\n      if (text && ABS_URL_TEST.test(text)) {\n        return text;\n      } else {\n        return Path._resolveUrl(text, linkUrl);\n      }\n    },\n\n    _resolveUrl: function(url, base) {\n      // Lazy feature detection.\n      if (Path.__workingURL === undefined) {\n        Path.__workingURL = false;\n        try {\n          const u = new URL('b', 'http://a');\n          u.pathname = 'c%20d';\n          Path.__workingURL = (u.href === 'http://a/c%20d');\n        } catch (e) {}\n      }\n\n      if (Path.__workingURL) {\n        return (new URL(url, base)).href;\n      }\n\n      // Fallback to creating an anchor into a disconnected document.\n      let doc = Path.__tempDoc;\n      if (!doc) {\n        doc = document.implementation.createHTMLDocument('temp');\n        Path.__tempDoc = doc;\n        doc.__base = doc.createElement('base');\n        doc.head.appendChild(doc.__base);\n        doc.__anchor = doc.createElement('a');\n      }\n      doc.__base.href = base;\n      doc.__anchor.href = url;\n      return doc.__anchor.href || url;\n    }\n  };\n\n  /********************* Xhr processor *********************/\n  const Xhr = {\n\n    async: true,\n\n    /**\n     * @param {!string} url\n     * @param {!function(boolean, ?, string=)} callback\n     * @return {XMLHttpRequest}\n     */\n    load: function(url, callback) {\n      const request = new XMLHttpRequest();\n      if (flags.bust) {\n        url += '?' + Math.random();\n      }\n      request.open('GET', url, Xhr.async);\n      request.addEventListener('readystatechange', (e) => {\n        if (request.readyState === 4) {\n          // Servers redirecting an import can add a Location header to help us\n          // polyfill correctly.\n          let redirectedUrl = undefined;\n          try {\n            const locationHeader = request.getResponseHeader('Location');\n            if (locationHeader) {\n              // Relative or full path.\n              redirectedUrl = (locationHeader.substr(0, 1) === '/') ?\n                location.origin + locationHeader : locationHeader;\n            }\n          } catch (e) {\n            console.error(e.message);\n          }\n          const isOk = ((request.status >= 200 && request.status < 300) ||\n            request.status === 304 || request.status === 0);\n          const resource = (request.response || request.responseText);\n          callback(!isOk, resource, redirectedUrl);\n        }\n      });\n      request.send();\n      return request;\n    }\n  };\n\n  /********************* loader *********************/\n  // This loader supports a dynamic list of urls\n  // and an oncomplete callback that is called when the loader is done.\n  // NOTE: The polyfill currently does *not* need this dynamism or the\n  // onComplete concept. Because of this, the loader could be simplified\n  // quite a bit.\n  class Loader {\n    constructor(onLoad, onComplete) {\n      this.cache = {};\n      this.onload = onLoad;\n      this.oncomplete = onComplete;\n      this.inflight = 0;\n      this.pending = {};\n    }\n\n    addNodes(nodes) {\n      // number of transactions to complete\n      this.inflight += nodes.length;\n      // commence transactions\n      for (let i = 0, l = nodes.length, n;\n        (i < l) && (n = nodes[i]); i++) {\n        this.require(n);\n      }\n      // anything to do?\n      this.checkDone();\n    }\n\n    addNode(node) {\n      // number of transactions to complete\n      this.inflight++;\n      // commence transactions\n      this.require(node);\n      // anything to do?\n      this.checkDone();\n    }\n\n    require(elt) {\n      const url = elt.src || elt.href;\n      // deduplication\n      if (!this.dedupe(url, elt)) {\n        // fetch this resource\n        this.fetch(url, elt);\n      }\n    }\n\n    dedupe(url, elt) {\n      if (this.pending[url]) {\n        // add to list of nodes waiting for inUrl\n        this.pending[url].push(elt);\n        // don't need fetch\n        return true;\n      }\n      let resource;\n      if (this.cache[url]) {\n        this.onload(url, elt, this.cache[url]);\n        // finished this transaction\n        this.tail();\n        // don't need fetch\n        return true;\n      }\n      // first node waiting for inUrl\n      this.pending[url] = [elt];\n      // need fetch (not a dupe)\n      return false;\n    }\n\n    fetch(url, elt) {\n      flags.log && console.log('fetch', url, elt);\n      if (!url) {\n        this.receive(url, elt, true, 'error: href must be specified');\n      } else if (url.match(/^data:/)) {\n        // Handle Data URI Scheme\n        const pieces = url.split(',');\n        const header = pieces[0];\n        let body = pieces[1];\n        if (header.indexOf(';base64') > -1) {\n          body = atob(body);\n        } else {\n          body = decodeURIComponent(body);\n        }\n        this.receive(url, elt, false, body);\n      } else {\n        Xhr.load(url, (error, resource, redirectedUrl) =>\n          this.receive(url, elt, error, resource, redirectedUrl));\n      }\n    }\n\n    /**\n     * @param {!string} url\n     * @param {!Element} elt\n     * @param {boolean} err\n     * @param {string=} resource\n     * @param {string=} redirectedUrl\n     */\n    receive(url, elt, err, resource, redirectedUrl) {\n      this.cache[url] = resource;\n      const $p = this.pending[url];\n      for (let i = 0, l = $p.length, p;\n        (i < l) && (p = $p[i]); i++) {\n        // If url was redirected, use the redirected location so paths are\n        // calculated relative to that.\n        this.onload(url, p, resource, err, redirectedUrl);\n        this.tail();\n      }\n      this.pending[url] = null;\n    }\n\n    tail() {\n      --this.inflight;\n      this.checkDone();\n    }\n\n    checkDone() {\n      if (!this.inflight) {\n        this.oncomplete();\n      }\n    }\n  }\n\n  /********************* importer *********************/\n\n  const stylesSelector = [\n    'style:not([type])',\n    'link[rel=stylesheet][href]:not([type])'\n  ].join(',');\n\n  const stylesInImportsSelector = [\n    `${IMPORT_SELECTOR} style:not([type])`,\n    `${IMPORT_SELECTOR} link[rel=stylesheet][href]:not([type])`\n  ].join(',');\n\n  const importsSelectors = [\n    IMPORT_SELECTOR,\n    stylesSelector,\n    'script:not([type])',\n    'script[type=\"application/javascript\"]',\n    'script[type=\"text/javascript\"]'\n  ].join(',');\n\n  /**\n   * Importer will:\n   * - load any linked import documents (with deduping)\n   * - whenever an import is loaded, prompt the parser to try to parse\n   * - observe imported documents for new elements (these are handled via the\n   *   dynamic importer)\n   */\n  class Importer {\n    /**\n     * @param {!HTMLDocument} doc\n     */\n    constructor(doc) {\n      this.documents = {};\n      this._doc = doc;\n      // Make sure to catch any imports that are in the process of loading\n      // when this script is run.\n      const imports = doc.querySelectorAll(IMPORT_SELECTOR);\n      for (let i = 0, l = imports.length; i < l; i++) {\n        whenElementLoaded(imports[i]);\n      }\n      // Observe only document head\n      new MutationObserver(this._onMutation.bind(this)).observe(doc.head, {\n        childList: true\n      });\n\n      if (!useNative) {\n        this._loader = new Loader(\n          this._onLoaded.bind(this), this._onLoadedAll.bind(this)\n        );\n        whenDocumentReady(doc).then(() => this._loadSubtree(doc));\n      }\n    }\n\n    _loadSubtree(doc) {\n      const nodes = doc.querySelectorAll(IMPORT_SELECTOR);\n      // add these nodes to loader's queue\n      this._loader.addNodes(nodes);\n    }\n\n    _onLoaded(url, elt, resource, err, redirectedUrl) {\n      flags.log && console.log('loaded', url, elt);\n      // We've already seen a document at this url, return.\n      if (this.documents[url] !== undefined) {\n        return;\n      }\n      if (err) {\n        this.documents[url] = null;\n      } else {\n        // Generate an HTMLDocument from data.\n        const doc = makeDocument(resource, redirectedUrl || url);\n        // note, we cannot use MO to detect parsed nodes because\n        // SD polyfill does not report these as mutations.\n        this._loadSubtree(doc);\n        this.documents[url] = doc;\n      }\n    }\n\n    _onLoadedAll() {\n      this._flatten(this._doc);\n      Promise.all([\n        runScripts(this._doc),\n        waitForStyles(this._doc)\n      ]).then(() => fireEvents(this._doc));\n    }\n\n    _flatten(element) {\n      const n$ = element.querySelectorAll(IMPORT_SELECTOR);\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        n.import = this.documents[n.href];\n        if (n.import && !n.import.__firstImport) {\n          n.import.__firstImport = n;\n          this._flatten(n.import);\n          // If in the main document, observe for any imports added later.\n          if (element === document) {\n            // In IE/Edge, when imports have link stylesheets/styles, the cascading order\n            // isn't respected https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10472273/\n            if (isIE || isEdge) {\n              cloneAndMoveStyles(n);\n            }\n            this._observe(n.import);\n          }\n          n.appendChild(n.import);\n        }\n      }\n    }\n\n    _observe(element) {\n      if (element.__importObserver) {\n        return;\n      }\n      element.__importObserver = new MutationObserver(this._onMutation.bind(this));\n      element.__importObserver.observe(element, {\n        childList: true,\n        subtree: true\n      });\n    }\n\n    /**\n     * @param {Array<MutationRecord>} mutations\n     */\n    _onMutation(mutations) {\n      for (let j = 0, m; j < mutations.length && (m = mutations[j]); j++) {\n        for (let i = 0, l = m.addedNodes ? m.addedNodes.length : 0; i < l; i++) {\n          const n = /** @type {Element} */ (m.addedNodes[i]);\n          if (n && isImportLink(n)) {\n            if (useNative) {\n              whenElementLoaded(n);\n            } else {\n              this._loader.addNode(n);\n            }\n          }\n        }\n      }\n    }\n\n  }\n\n  /**\n   * @type {Function}\n   */\n  const MATCHES = Element.prototype.matches ||\n    Element.prototype.matchesSelector ||\n    Element.prototype.mozMatchesSelector ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.oMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  function isImportLink(node) {\n    return node.nodeType === Node.ELEMENT_NODE && MATCHES.call(node, IMPORT_SELECTOR);\n  }\n\n  /********************* vulcanize style inline processing  *********************/\n  const attrs = ['action', 'src', 'href', 'url', 'style'];\n\n  function fixUrlAttributes(element, base) {\n    attrs.forEach((a) => {\n      const at = element.attributes[a];\n      const v = at && at.value;\n      if (v && (v.search(/({{|\\[\\[)/) < 0)) {\n        at.value = (a === 'style') ?\n          Path.resolveUrlsInCssText(v, base) :\n          Path.replaceAttrUrl(v, base);\n      }\n    });\n  }\n\n  function fixUrlsInTemplate(template, base) {\n    const content = template.content;\n    if (!content) { // Template not supported.\n      return;\n    }\n    const n$ = content.querySelectorAll('style, form[action], [src], [href], [url], [style]');\n    for (let i = 0; i < n$.length; i++) {\n      const n = n$[i];\n      if (n.localName == 'style') {\n        Path.resolveUrlsInStyle(n, base);\n      } else {\n        fixUrlAttributes(n, base);\n      }\n    }\n    fixUrlsInTemplates(content, base);\n  }\n\n  function fixUrlsInTemplates(element, base) {\n    const t$ = element.querySelectorAll('template');\n    for (let i = 0; i < t$.length; i++) {\n      fixUrlsInTemplate(t$[i], base);\n    }\n  }\n\n  const scriptType = 'import-script';\n\n  function fixUrls(element, base) {\n    const n$ = element.querySelectorAll(importsSelectors);\n    for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n      // Ensure we add load/error listeners before modifying urls or appending\n      // these to the main document.\n      whenElementLoaded(n);\n      if (n.href) {\n        n.setAttribute('href', Path.replaceAttrUrl(n.getAttribute('href'), base));\n      }\n      if (n.src) {\n        n.setAttribute('src', Path.replaceAttrUrl(n.getAttribute('src'), base));\n      }\n      if (n.localName == 'style') {\n        Path.resolveUrlsInStyle(n, base);\n      } else if (n.localName === 'script') {\n        if (n.textContent) {\n          n.textContent += `\\n//# sourceURL=${base}`;\n        }\n        // NOTE: we override the type here, might need to keep track of original\n        // type and apply it to clone when running the script.\n        n.setAttribute('type', scriptType);\n      }\n    }\n    fixUrlsInTemplates(element, base);\n  }\n\n  function fixDomModules(element, url) {\n    const s$ = element.querySelectorAll('dom-module');\n    for (let i = 0; i < s$.length; i++) {\n      const o = s$[i];\n      const assetpath = o.getAttribute('assetpath') || '';\n      o.setAttribute('assetpath', Path.replaceAttrUrl(assetpath, url));\n    }\n  }\n\n  /**\n   * Replaces all the imported scripts with a clone in order to execute them.\n   * Updates the `currentScript`.\n   * @param {!HTMLDocument} doc\n   * @return {Promise} Resolved when scripts are loaded.\n   */\n  function runScripts(doc) {\n    const s$ = doc.querySelectorAll(`script[type=${scriptType}]`);\n    let promise = Promise.resolve();\n    for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n      promise = promise.then(() => {\n        const c = doc.createElement('script');\n        c.textContent = s.textContent;\n        if (s.src) {\n          c.setAttribute('src', s.getAttribute('src'));\n        }\n        // Listen for load/error events before adding the clone to the document.\n        // Catch failures, always return c.\n        const whenLoadedPromise = whenElementLoaded(c).catch(() => c);\n        // Update currentScript and replace original with clone script.\n        currentScript = c;\n        s.parentNode.replaceChild(c, s);\n        // After is loaded, reset currentScript.\n        return whenLoadedPromise.then((script) => {\n          if (script === currentScript) {\n            currentScript = null;\n          }\n        });\n      });\n    }\n    return promise;\n  }\n\n  /**\n   * Waits for all the imported stylesheets/styles to be loaded.\n   * @param {!HTMLDocument} doc\n   * @return {Promise}\n   */\n  function waitForStyles(doc) {\n    const s$ = doc.querySelectorAll(stylesInImportsSelector);\n    const promises = [];\n    for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n      // Catch failures, always return s\n      promises.push(\n        whenElementLoaded(s).catch(() => s)\n      );\n    }\n    return Promise.all(promises);\n  }\n\n  /**\n   * Clones styles and stylesheets links contained in imports and moves them\n   * as siblings of the root import link.\n   * @param {!HTMLLinkElement} importLink\n   */\n  function cloneAndMoveStyles(importLink) {\n    const n$ = importLink.import.querySelectorAll(stylesSelector);\n    for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n      const clone = document.createElement(n.localName);\n      // Ensure we listen for load/error for this element.\n      whenElementLoaded(clone);\n      // Copy textContent and attributes.\n      clone.textContent = n.textContent;\n      for (let j = 0, ll = n.attributes.length; j < ll; j++) {\n        clone.setAttribute(n.attributes[j].name, n.attributes[j].value);\n      }\n\n      // Remove old, add new.\n      n.parentNode.removeChild(n);\n      importLink.parentNode.insertBefore(clone, importLink);\n    }\n  }\n\n  /**\n   * Fires load/error events for loaded imports.\n   * @param {!HTMLDocument} doc\n   */\n  function fireEvents(doc) {\n    const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n      (doc.querySelectorAll(IMPORT_SELECTOR));\n    // Inverse order to have events firing bottom-up.\n    for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\n      // Don't fire twice same event.\n      if (!n.__fired) {\n        n.__fired = true;\n        const eventType = n.import ? 'load' : 'error';\n        flags.log && console.warn('fire', eventType, n.href);\n        // Ensure the load promise is setup before firing the event.\n        whenElementLoaded(n);\n        n.dispatchEvent(new CustomEvent(eventType, {\n          bubbles: false,\n          cancelable: false,\n          detail: undefined\n        }));\n      }\n    }\n  }\n\n  /**\n   * Waits for an element to finish loading. If already done loading, it will\n   * mark the element accordingly.\n   * @param {!Element} element\n   * @return {Promise}\n   */\n  function whenElementLoaded(element) {\n    if (!element.__loadPromise) {\n      element.__loadPromise = new Promise((resolve, reject) => {\n        if (isElementLoaded(element)) {\n          resolve(element);\n        } else {\n          element.addEventListener('load', () => resolve(element));\n          element.addEventListener('error', () => reject(element));\n        }\n      });\n    }\n    return element.__loadPromise;\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {boolean}\n   */\n  function isElementLoaded(element) {\n    let isLoaded = false;\n    if (useNative && isImportLink(element) && element.import &&\n      element.import.readyState !== 'loading') {\n      isLoaded = true;\n    } else if (isIE && element.localName === 'style') {\n      // NOTE: IE does not fire \"load\" event for styles that have already\n      // loaded. This is in violation of the spec, so we try our hardest to\n      // work around it.\n      // If there's not @import in the textContent, assume it has loaded\n      if (element.textContent.indexOf('@import') == -1) {\n        isLoaded = true;\n        // if we have a sheet, we have been parsed\n      } else if (element.sheet) {\n        isLoaded = true;\n        const csr = element.sheet.cssRules;\n        // search the rules for @import's\n        for (let i = 0, l = csr ? csr.length : 0; i < l && isLoaded; i++) {\n          if (csr[i].type === CSSRule.IMPORT_RULE) {\n            // if every @import has resolved, fake the load\n            isLoaded = Boolean(csr[i].styleSheet);\n          }\n        }\n      }\n    } else if (element.localName === 'script' && !element.src) {\n      isLoaded = true;\n    }\n    return isLoaded;\n  }\n\n  /**\n   * Creates a new document containing resource and normalizes urls accordingly.\n   * @param {string=} resource\n   * @param {string=} url\n   * @return {HTMLElement}\n   */\n  function makeDocument(resource, url) {\n    const content = /** @type {HTMLElement} */\n      (document.createElement('import-content'));\n    content.style.display = 'none';\n    if (url) {\n      content.setAttribute('import-href', url);\n    }\n    if (resource) {\n      content.innerHTML = resource;\n    }\n\n    // Support <base> in imported docs. Resolve url and remove it from the parent.\n    const baseEl = /** @type {HTMLBaseElement} */ (content.querySelector('base'));\n    if (baseEl) {\n      url = Path._resolveUrl(baseEl.getAttribute('href'), url);\n      baseEl.parentNode.removeChild(baseEl);\n    }\n    // TODO(sorvell): this is specific to users of <dom-module> (Polymer).\n    fixDomModules(content, url);\n    fixUrls(content, url);\n    return content;\n  }\n\n  /**\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\n    method. This api is necessary because unlike the native implementation,\n    script elements do not force imports to resolve. Instead, users should wrap\n    code in either an `HTMLImportsLoaded` handler or after load time in an\n    `HTMLImports.whenReady(callback)` call.\n\n    NOTE: This module also supports these apis under the native implementation.\n    Therefore, if this file is loaded, the same code can be used under both\n    the polyfill and native implementation.\n   */\n\n  const isIE = /Trident/.test(navigator.userAgent);\n  const isEdge = !isIE && /Edge\\/\\d./i.test(navigator.userAgent);\n\n  /**\n   * Calls the callback when all HTMLImports in the document at call time\n   * (or at least document ready) have loaded.\n   * @param {function(!HTMLImportInfo)=} callback\n   * @param {HTMLDocument=} doc\n   * @return {Promise}\n   */\n  function whenReady(callback, doc) {\n    doc = doc || document;\n    // 1. ensure the document is in a ready state (has dom), then\n    // 2. watch for loading of imports and call callback when done\n    return whenDocumentReady(doc).then(watchImportsLoad).then((importInfo) => {\n      callback && callback(importInfo);\n      return importInfo;\n    });\n  }\n\n\n  /**\n   * Resolved when document is in ready state.\n   * @param {!HTMLDocument} doc\n   * @returns {Promise}\n   */\n  function whenDocumentReady(doc) {\n    return new Promise((resolve) => {\n      if (doc.readyState !== 'loading') {\n        resolve(doc);\n      } else {\n        doc.addEventListener('readystatechange', () => {\n          if (doc.readyState !== 'loading') {\n            resolve(doc);\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Resolved when all imports are done loading. The promise returns the import\n   * details as HTMLImportInfo object.\n   * @param {!HTMLDocument} doc\n   * @returns {Promise}\n   */\n  function watchImportsLoad(doc) {\n    let imports = doc.querySelectorAll(IMPORT_SELECTOR);\n    const promises = [];\n    const importInfo = /** @type {!HTMLImportInfo} */ ({\n      allImports: [],\n      loadedImports: [],\n      errorImports: []\n    });\n    for (let i = 0, l = imports.length, imp; i < l && (imp = imports[i]); i++) {\n      // Skip nested imports.\n      if (MATCHES.call(imp, `${IMPORT_SELECTOR} ${IMPORT_SELECTOR}`)) {\n        continue;\n      }\n      importInfo.allImports.push(imp);\n      promises.push(whenElementLoaded(imp).then((imp) => {\n        importInfo.loadedImports.push(imp);\n        return imp;\n      }).catch((imp) => {\n        importInfo.errorImports.push(imp);\n        // Capture failures, always return imp.\n        return imp;\n      }));\n    }\n    // Return aggregated info.\n    return Promise.all(promises).then(() => importInfo);\n  }\n\n  new Importer(document);\n\n  // Fire the 'HTMLImportsLoaded' event when imports in document at load time\n  // have loaded. This event is required to simulate the script blocking\n  // behavior of native imports. A main document script that needs to be sure\n  // imports have loaded should wait for this event.\n  whenReady((detail) =>\n    document.dispatchEvent(new CustomEvent('HTMLImportsLoaded', {\n      cancelable: true,\n      bubbles: true,\n      detail: detail\n    })));\n\n  // exports\n  scope.useNative = useNative;\n  scope.whenReady = whenReady;\n\n})(window.HTMLImports = (window.HTMLImports || {}));\n"]}